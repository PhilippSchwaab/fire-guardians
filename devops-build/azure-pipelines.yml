name: $(MajorVersion).$(MinorVersion).$(date:yyMM).$(DayOfMonth)$(rev:rrr)-$(Build.SourceBranchName)

trigger:
  batch: true
  branches:
    include:
      - dev/*
      - main
  tags:
    include:
      - refs/tags/r*

variables:
  - group: GitSSHGroup
  - group: OctoDefault
  - name: solutionFile
    value: 'FireGuardians.sln'
  - name: isRelease
    value: ${{ startsWith(variables['Build.SourceBranch'], 'refs/tags/r') }}

stages:
  - stage: Build
    jobs:
      - job: linux
        displayName: Docker build
        pool:
          name: Gerald-Local-Linux
        steps:
          - template: update-build-number.yml
          - checkout: self
            clean: true
            submodules: recursive
          - task: InstallSSHKey@0
            inputs:
              knownHostsEntry: '$(SSHKnownHosts)'
              sshPublicKey: '$(SSHPublicKey)'
              sshPassphrase: '$(SSHPassphrase)'
              sshKeySecureFile: '$(SSHPrivateKeyFile)'            
          - template: set-version.yml
          - task: NodeTool@0
            displayName: Using latest NodeJS 20.x version
            inputs:
              versionSource: 'spec'
              versionSpec: '20.x'
              checkLatest: true
          - task: DotNetCoreCLI@2
            displayName: 'Running tests'
            inputs:
              command: 'test'
              projects: |
                '**/*Tests.csproj'
                !'**/*SystemTests.csproj'
              testRunTitle: 'CI'
          - template: buildAndPushDockerImage.yml
            parameters:
              ContainerRegistry: 'dockerhub@ianitor'
              Repository: meshmakers/fire-guardians-app
              Dockerfile: src/FireGuardiansWebApp/Dockerfile
              IsRelease: ${{ variables.isRelease }}
          - task: CopyFiles@2
            displayName: 'Copy Files from $(Build.SourcesDirectory)/bin/$(BuildConfiguration)/**/*.nupkg to $(build.artifactstagingdirectory)'
            inputs:
              SourceFolder: $(Build.SourcesDirectory)
              Contents: |
                bin/$(BuildConfiguration)/**/*.nupkg
              TargetFolder: $(build.artifactstagingdirectory)
          - task: PowerShell@2
            displayName: 'Create versioninfo file'
            inputs:
              targetType: 'inline'
              script: |
                New-Item $(build.artifactstagingdirectory)/versioninfo.txt
                Set-Content $(build.artifactstagingdirectory)/versioninfo.txt $(Build.BuildNumber)
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: local'
            inputs:
              ArtifactName: local